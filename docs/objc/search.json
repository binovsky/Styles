{"Enums/TextInputState.html#/c:@E@TextInputState@kEditing":{"name":"kEditing","abstract":"<p>The input is in editing state</p>","parent_name":"TextInputState"},"Enums/TextInputState.html#/c:@E@TextInputState@kInactive":{"name":"kInactive","abstract":"<p>The input is inactive</p>","parent_name":"TextInputState"},"Enums/TextInputState.html":{"name":"TextInputState","abstract":"<p>Defines input state for UITextView, UITextField</p>"},"Categories/UIView(Styles).html#/c:objc(cs)UIView(py)viewStyle":{"name":"viewStyle","abstract":"<p>ViewStyle to be applied to the view</p>","parent_name":"UIView(Styles)"},"Categories/UIView(Styles).html#/c:objc(cs)UIView(im)applyStyle":{"name":"-applyStyle","abstract":"<p>Applies the style to view</p>","parent_name":"UIView(Styles)"},"Categories/UITextView(Styles).html#/c:objc(cs)UITextView(im)setTextStyle:forState:":{"name":"-setTextStyle:forState:","abstract":"<p>Sets text style for state</p>","parent_name":"UITextView(Styles)"},"Categories/UITextView(Styles).html#/c:objc(cs)UITextView(im)setViewStyle:forState:":{"name":"-setViewStyle:forState:","abstract":"<p>Sets view style for particular state. Can throw an exception in case you set the style for both states and layer properties are missing.","parent_name":"UITextView(Styles)"},"Categories/UITextField(Styles).html#/c:objc(cs)UITextField(im)setTextStyle:forState:":{"name":"-setTextStyle:forState:","abstract":"<p>Sets text style for state</p>","parent_name":"UITextField(Styles)"},"Categories/UITextField(Styles).html#/c:objc(cs)UITextField(im)setViewStyle:forState:":{"name":"-setViewStyle:forState:","abstract":"<p>Sets view style for particular state. Can throw an exception in case you set the style for both states and layer properties are missing.","parent_name":"UITextField(Styles)"},"Categories/UITextField(Styles).html#/c:objc(cs)UITextField(im)setPlaceholderStyle:forState:":{"name":"-setPlaceholderStyle:forState:","abstract":"<p>Sets text style of placehoder for particular state</p>","parent_name":"UITextField(Styles)"},"Categories/UINavigationBar(TextStyle).html#/c:objc(cs)UINavigationBar(py)titleTextStyle":{"name":"titleTextStyle","abstract":"<p>TextStyle to be applied to title</p>","parent_name":"UINavigationBar(TextStyle)"},"Categories/UINavigationBar(TextStyle).html#/c:objc(cs)UINavigationBar(py)largeTitleTextStyle":{"name":"largeTitleTextStyle","abstract":"<p>From #iOS11 you can set large title and its TextStyle</p>","parent_name":"UINavigationBar(TextStyle)"},"Categories/UILabel(Styles).html#/c:objc(cs)UILabel(py)textStyle":{"name":"textStyle","abstract":"<p>TextStyle allows you to modify the visual appearance of the text</p>","parent_name":"UILabel(Styles)"},"Categories/UIButton(Styles).html#/c:objc(cs)UIButton(im)setTextStyle:forState:":{"name":"-setTextStyle:forState:","abstract":"<p>Sets and applies the text style</p>","parent_name":"UIButton(Styles)"},"Categories/UIButton(Styles).html":{"name":"UIButton(Styles)","abstract":"<p>UIButton+Styles allows to set the text style for particular state</p>"},"Categories/UILabel(Styles).html":{"name":"UILabel(Styles)","abstract":"<p>UILabel+Styles allows to set the text style</p>"},"Categories/UINavigationBar(TextStyle).html":{"name":"UINavigationBar(TextStyle)","abstract":"<p>UINavigationBar+Styles allows to modify title text style</p>"},"Categories/UITextField(Styles).html":{"name":"UITextField(Styles)","abstract":"<p>UITextField+Styles allows to modify text and view styles for particular states</p>"},"Categories/UITextView(Styles).html":{"name":"UITextView(Styles)","abstract":"<p>UITextView+Styles allows you to set view and text style for particular state</p>"},"Categories/UIView(Styles).html":{"name":"UIView(Styles)","abstract":"<p>UIView+Styles allows to set and apply view style not only on particular instance but also globally as UIAppearance selector.</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"}}